

trait Drawable {
    fn draw(&self);
}

trait Movable {
    fn move_to(&mut self, x: i32, y: i32);
}

trait DrawableMovable: Drawable + Movable {}

struct Square {
    x: i32,
    y: i32,
    side: i32,
}

impl Drawable for Square {
    fn draw(&self) {
        // Implementation for drawing a square
    }
}

impl Movable for Square {
    fn move_to(&mut self, x: i32, y: i32) {
        self.x = x;
        self.y = y;
    }
}

impl DrawableMovable for Square {}

fn main() {
    let mut square = Square { x: 0, y: 0, side: 10 };  //定义“data”的时候，不用考虑trait问题，只考虑struct定义
    square.draw(); // 使用trait的时候，考虑有“data”实现了哪些trait
    square.move_to(10, 10);  // 
    square.draw();
}

###
