1、泛型struct

struct A<T>{
  x: T,
}

struct中的泛型参数T，是用来约束其中的字段的
而 T 也可以有约束，其约束是 trait



2、泛型函数

fn area<T>(r: T) -> T 
where T: std::ops::Mul<Output = T> + Copy
{
    r * r
}

fn main() {
    println!("{}", area(3));
    println!("{}", area(3.2));
}

可见在使用泛型函数的时候，并不需要指明T
但是在rust的随机函数生成时，为什么需要指明 ::<f32> 或 ::<f64>  ??





